import os 
import shutil
import re

def transcript_validity(text):
    text_lower = text.lower()
    word_count = len(text.split())

    if word_count <300:
        return False, "The transcript's word count is too low"
    
    speaker_lines  = re.findall(r"^[A-Z][a-zA-Z\s]+\:", text, flags=re.MULTILINE)
    if len(speaker_lines) < 2:
        return False, "Not enough speaker lines"
    
    common_phrases = ["financial results", "earnings call", "conference call", "welcome"]
    phrase_hits = sum(1 for phrase in common_phrases if phrase in text_lower)
    if phrase_hits < 2:
        return False, "Missing common phrases"
    
    return True

def transcript_insert(folder_path, filename):
    print("\n Paste the full transcript text here:. Enter twice to save:\n")
    lines = []
    while True:
        try:
            line = input()
            if line.strip() == "":
                break
            lines.append(line)
        except EOFError:
            break   
    text = "\n".join(lines)
    is_valid, reason = transcript_validity(text)
    if is_valid:
        with open(os.path.join(folder_path, filename), "w", encoding="utf-8") as f:
            f.write(text)
        return True
    else:
        print("Invalid transcript. Reason:", reason)
        return False
    
def upload_transcript(folder_path, filename):
    source_path = input("Enter the path to the transcript file: ").strip()
    if not os.path.exists(source_path):
        print("File not found")
        return
    with open(source_path, "r", encoding="utf-8") as f:
        text = f.read()

    is_valid, reason = transcript_validity(text)
    if not is_valid:
        print(f" Warning: {reason}")
        proceed = input("Do you want to continue anyway? (y/n): ").strip().lower()
        if proceed != "y":
            print(" Cancelled.")
            return

    dest_path = os.path.join(folder_path, filename)
    shutil.copy(source_path, dest_path)
    print(f"\n Transcript copied to: {dest_path}")

def main():
    symbol = input("Enter stock ticker (e.g., NVDA): ").upper()
    quarter = input("Enter quarter (e.g., Q2): ").upper()
    year = input("Enter year (e.g., 2025): ").strip()

    filename = f"{quarter}_{year}.txt"
    folder_path = os.path.join("data", symbol)
    os.makedirs(folder_path, exist_ok=True)

    method = input("Would you like to (P)aste or (U)pload the transcript? ").strip().lower()

    if method == "p":
        upload_transcript(folder_path, filename)
    elif method == "u":
        upload_transcript(folder_path, filename)
    else:
        print(" Invalid option. Please enter 'P' or 'U'.")

if __name__ == "__main__":
    main()
